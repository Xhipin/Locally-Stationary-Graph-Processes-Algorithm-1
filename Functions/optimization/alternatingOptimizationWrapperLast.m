function errorPercentage = alternatingOptimizationWrapperLast(alternatingParams)
%% Indicator
fprintf(1,'\n /*--- mu_2 = %f, mu_3 = %f, mu_4 = %f ---*/\n\n',...
    alternatingParams.mu_two, alternatingParams.mu_three,...
    alternatingParams.mu_four);

%% Alternating Optimization
[Gamma, B, ~] = alternatingOptimization(alternatingParams.initialValue,...
    alternatingParams.gb, alternatingParams.N, alternatingParams.Q,...
    alternatingParams.Cl, alternatingParams.L, alternatingParams.Rx,...
    alternatingParams.mu_two, alternatingParams.mu_three, ...
    alternatingParams.mu_four, alternatingParams.UG,...
    alternatingParams.lambda_G, alternatingParams.Z,...
    alternatingParams.i,alternatingParams.j, alternatingParams.k,...
    alternatingParams.MAX_ITERS,alternatingParams.errors);

%% Obtain Filters
Rx_found = joint_costTest(B, Gamma, alternatingParams.N, ...
    alternatingParams.Q, alternatingParams.Cl, alternatingParams.L);

if isfield(alternatingParams, 'n_Rx')
    Rx_found = Rx_found * alternatingParams.n_Rx;
end

%% Estimate Unknown Entries and Return the resulting Error
[~,err] = estimateUnknownNew(alternatingParams.data, ...
    alternatingParams.x_local, Rx_found, alternatingParams.mask, ...
    alternatingParams.vort);

errorPercentage = err.rnmse;
end

